//  color-ranges
//  ----------------------------------------------------------------------------
  $color-ranges: (
    black: (
      default: 100,
      opacity: (
        40: transparentize(#000, 0.60),
      ),
      100: #000,
    ),
    white: (
      default: 100,
      opacity: (
        15: transparentize(#fff, 0.85),
        20: transparentize(#fff, 0.80),
      ),
      100: #fff,
    ),
    red: (
      default: 100,
      10: #FFBFB4,
      20: #FFBFB4,
      30: #FFBFB4,
      80: #C11424,
      90: #C11424,
      100: #C11424,
    ),
  );

//  color-opacity
//  ----------------------------------------------------------------------------
  @function color-opacity($range-name, $weight) {
    $range: map-get($color-ranges, $range-name);

    @return map-get(
      map-get(
        map-get($color-ranges, $range-name),
        opacity
      ),
      $weight
    );
  }

//  color-weight
//  ----------------------------------------------------------------------------
  @function color-weight($range-name, $weight: default) {
    $range: map-get($color-ranges, $range-name);

    @return map-get(
      $range,
      if($weight == default, map-get($range, default), $weight)
    );
  }

//  color-palettes
//  ----------------------------------------------------------------------------
  $color-palettes: (
    black: (
      default: color-weight(black),
      hover: color-weight(black),
      active: color-weight(black),
      disabled: color-weight(black),
    ),
    white: (
      default: color-weight(white),
      hover: color-weight(white),
      active: color-weight(white),
      disabled: color-weight(white),
    ),
    red-light: (
      default: color-weight(red, 10),
      hover: color-weight(red, 20),
      active: color-weight(red, 30),
      disabled: color-weight(red, 30),
    ),
    red-dark: (
      default: color-weight(red, 100),
      hover: color-weight(red, 90),
      active: color-weight(red, 80),
      disabled: color-weight(red, 80),
    ),
    ghost: (
      default: transparent,
      hover: color-opacity(white, 15),
      active: color-opacity(white, 20),
      disabled: transparent,
    ),
    transparent: (
      default: transparent,
      hover: transparent,
      active: transparent,
      disabled: transparent,
    ),
  );

//  color-state
//  ----------------------------------------------------------------------------
  @function color-state($palette-name, $state: default) {
    @return map-get(
      map-get($color-palettes, $palette-name),
      $state
    );
  }

//  color-mouse-states
//  ----------------------------------------------------------------------------
  @mixin color-mouse-states($states) {
    @each $state, $state-attrs in $states {
      @if ($state == default) {
        @include _color-mouse-state($state-attrs);
      }

      @if ($state == hover) {
        @include hover() {
          @include _color-mouse-state($state-attrs);
        }
      }

      @if ($state == active) {
        @include active() {
          @include _color-mouse-state($state-attrs);
        }
      }
    }
  }

  //  _color-mouse-state
  //  ----------------------------------------------------------------------------
    @mixin _color-mouse-state($state-attrs-or-color) {
      $state-attrs: if(
        type-of($state-attrs-or-color) == map,
        $state-attrs-or-color,
        (
          color: $state-attrs-or-color,
        )
      );

      @each $state-attr, $color-weight in $state-attrs {
        #{$state-attr}: $color-weight;
      }
    }
